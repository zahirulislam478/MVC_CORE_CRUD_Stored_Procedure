// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant_Management.Models;

#nullable disable

namespace Restaurant_Management.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20231130174244_InitiatCreate")]
    partial class InitiatCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Restaurant_Management.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            Category = 4,
                            Description = "ABC1",
                            FoodName = "Food 1",
                            IsAvailable = true,
                            Picture = "1.jpg",
                            Price = 1270.00m
                        },
                        new
                        {
                            FoodId = 2,
                            Category = 1,
                            Description = "ABC2",
                            FoodName = "Food 2",
                            IsAvailable = true,
                            Picture = "2.jpg",
                            Price = 1297.00m
                        },
                        new
                        {
                            FoodId = 3,
                            Category = 2,
                            Description = "ABC3",
                            FoodName = "Food 3",
                            IsAvailable = true,
                            Picture = "3.jpg",
                            Price = 1421.00m
                        },
                        new
                        {
                            FoodId = 4,
                            Category = 4,
                            Description = "ABC4",
                            FoodName = "Food 4",
                            IsAvailable = true,
                            Picture = "4.jpg",
                            Price = 1498.00m
                        },
                        new
                        {
                            FoodId = 5,
                            Category = 2,
                            Description = "ABC5",
                            FoodName = "Food 5",
                            IsAvailable = true,
                            Picture = "5.jpg",
                            Price = 1447.00m
                        });
                });

            modelBuilder.Entity("Restaurant_Management.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Phone")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .IsRequired()
                        .HasColumnType("money");

                    b.HasKey("OrderId");

                    b.HasIndex("FoodId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Address = "Address 1",
                            CustomerName = "Customer 1",
                            Email = "customer1@example.com",
                            FoodId = 1,
                            OrderDate = new DateTime(2022, 8, 17, 23, 42, 44, 486, DateTimeKind.Local).AddTicks(5170),
                            Phone = 580456418,
                            Quantity = 289,
                            TotalAmount = 1579.00m
                        },
                        new
                        {
                            OrderId = 2,
                            Address = "Address 2",
                            CustomerName = "Customer 2",
                            Email = "customer2@example.com",
                            FoodId = 2,
                            OrderDate = new DateTime(2022, 12, 22, 23, 42, 44, 486, DateTimeKind.Local).AddTicks(5259),
                            Phone = 538088507,
                            Quantity = 140,
                            TotalAmount = 1271.00m
                        },
                        new
                        {
                            OrderId = 3,
                            Address = "Address 3",
                            CustomerName = "Customer 3",
                            Email = "customer3@example.com",
                            FoodId = 3,
                            OrderDate = new DateTime(2022, 8, 8, 23, 42, 44, 486, DateTimeKind.Local).AddTicks(5320),
                            Phone = 703407400,
                            Quantity = 201,
                            TotalAmount = 1207.00m
                        },
                        new
                        {
                            OrderId = 4,
                            Address = "Address 4",
                            CustomerName = "Customer 4",
                            Email = "customer4@example.com",
                            FoodId = 4,
                            OrderDate = new DateTime(2022, 10, 2, 23, 42, 44, 486, DateTimeKind.Local).AddTicks(5382),
                            Phone = 248482140,
                            Quantity = 280,
                            TotalAmount = 1569.00m
                        },
                        new
                        {
                            OrderId = 5,
                            Address = "Address 5",
                            CustomerName = "Customer 5",
                            Email = "customer5@example.com",
                            FoodId = 5,
                            OrderDate = new DateTime(2023, 3, 13, 23, 42, 44, 486, DateTimeKind.Local).AddTicks(5443),
                            Phone = 781364099,
                            Quantity = 162,
                            TotalAmount = 1346.00m
                        },
                        new
                        {
                            OrderId = 6,
                            Address = "Address 6",
                            CustomerName = "Customer 6",
                            Email = "customer6@example.com",
                            FoodId = 1,
                            OrderDate = new DateTime(2023, 1, 22, 23, 42, 44, 486, DateTimeKind.Local).AddTicks(5482),
                            Phone = 654247633,
                            Quantity = 232,
                            TotalAmount = 1600.00m
                        },
                        new
                        {
                            OrderId = 7,
                            Address = "Address 7",
                            CustomerName = "Customer 7",
                            Email = "customer7@example.com",
                            FoodId = 2,
                            OrderDate = new DateTime(2023, 3, 9, 23, 42, 44, 486, DateTimeKind.Local).AddTicks(5518),
                            Phone = 864943268,
                            Quantity = 197,
                            TotalAmount = 1077.00m
                        },
                        new
                        {
                            OrderId = 8,
                            Address = "Address 8",
                            CustomerName = "Customer 8",
                            Email = "customer8@example.com",
                            FoodId = 3,
                            OrderDate = new DateTime(2022, 9, 10, 23, 42, 44, 486, DateTimeKind.Local).AddTicks(5580),
                            Phone = 341199118,
                            Quantity = 252,
                            TotalAmount = 1902.00m
                        });
                });

            modelBuilder.Entity("Restaurant_Management.Models.Order", b =>
                {
                    b.HasOne("Restaurant_Management.Models.Food", "Food")
                        .WithMany("Orders")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Restaurant_Management.Models.Food", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
